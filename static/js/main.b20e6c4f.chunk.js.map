{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactFormName.jsx","components/ContactForm/ContactFormNumber.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactFormName","title","onChange","value","nameInputId","htmlFor","id","type","name","placeholder","pattern","required","ContactFormNumber","ContactForm","state","number","shortid","generate","numberInputId","handleChange","e","target","console","log","setState","handleSubmit","preventDefault","props","onSubmit","className","css","ContactFormWrapper","this","Component","defaultProps","ContactList","handleDeleteContact","contacts","map","onClick","Container","children","ContainerWrapper","Filter","handleFilterChange","action","App","filter","data","currentTarget","contactId","prevState","contact","handleAddContact","newContact","some","alert","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filtered","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b20e6c4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerWrapper\":\"Container_ContainerWrapper__1a-HO\"};","import React from \"react\";\r\n\r\nconst ContactFormName = ({ title, onChange, value, nameInputId }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={nameInputId}>\r\n        {title}\r\n        <input\r\n          id={nameInputId}\r\n          value={value}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          name={title}\r\n          placeholder={title}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFormName;\r\n","import React from \"react\";\r\n\r\nconst ContactFormNumber = ({ title, onChange, value }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\">\r\n        {title}\r\n        <input\r\n          value={value}\r\n          placeholder={title}\r\n          onChange={onChange}\r\n          type=\"tel\"\r\n          name={title}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFormNumber;\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n// import PropTypes from \"prop-types\";\n\nimport css from \"./ContactForm.module.css\";\nimport ContactFormName from \"./ContactFormName\";\nimport ContactFormNumber from \"./ContactFormNumber\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n\n  numberInputId = shortid.generate();\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value);\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n    this.props.onSubmit(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={css.ContactFormWrapper} onSubmit={this.handleSubmit}>\n        <ContactFormName\n          nameInputId={this.nameInputId}\n          title=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <ContactFormNumber\n          title=\"number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  // bla: PropTypes.string,\n};\n\nContactForm.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ContactForm;\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n//import { Test } from './ContactList.styles';\n\nclass ContactList extends Component {\n  render() {\n    const { handleDeleteContact } = this.props;\n    const { contacts } = this.props;\n    return (\n      <div className=\"ContactListWrapper\">\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            {name} {number}\n            <button type=\"button\" onClick={() => handleDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </div>\n    );\n  }\n}\n\nContactList.propTypes = {\n  // bla: PropTypes.string,\n};\n\nContactList.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={css.ContainerWrapper}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n//import { Test } from './Filter.styles';\n\nconst Filter = ({ value, handleFilterChange }) => {\n  return (\n    <div className=\"FilterWrapper\">\n      <form action=\"\">\n        <label htmlFor=\"\">\n          <p> Find contacts by name</p>\n          <input\n            placeholder=\"Find contacts\"\n            onChange={handleFilterChange}\n            type=\"text\"\n            name=\"name\"\n            value={value}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  // bla: PropTypes.string,\n};\n\nFilter.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Container from \"./components/Container/Container\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      this.setState({ contacts: JSON.parse(contacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handleSubmit = (data) => {\n    this.setState({ ...data });\n    this.setState({ name: \"\", number: \"\" });\n  };\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  handleDeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  handleAddContact = (data) => {\n    const newContact = {\n      id: shortid.generate(),\n      ...data,\n    };\n\n    if (this.state.contacts.some(({ name }) => name === data.name)) {\n      alert(`${data.name} already exists`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number, filter, contacts } = this.state;\n    const filtered = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return (\n      <>\n        <Container className=\"App\">\n          <h1>Phonebook</h1>\n          <ContactForm\n            name={name}\n            number={number}\n            handleSubmit={this.handleSubmit}\n            onSubmit={this.handleAddContact}\n          />\n          <h2>Contacts</h2>\n          <Filter value={filter} handleFilterChange={this.handleFilterChange} />\n          <ContactList\n            contacts={filtered}\n            handleDeleteContact={this.handleDeleteContact}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}